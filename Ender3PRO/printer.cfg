#######################################
# Modified Ender 3 Pro Klipper config #
#######################################

# This file contains common pin mappings for the BigTreeTech SKR 2.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# The "make flash" command does not work on the SKR 2. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR 2
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: The initial revision of this board has a flaw that can cause
# damage to itself and other boards. Be sure to verify the board is
# not impacted by this flaw before using it.

[stepper_x]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 320
homing_speed: 50

[stepper_y]
step_pin: PD5
dir_pin: !PD4
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC3
position_endstop: 0
position_max: 289 # Temporary for rear stepper home switch
#position_max: 300
homing_speed: 50

[stepper_z]
step_pin: PA15
dir_pin: PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#endstop_pin: ^PC0
position_max: 400

#E3D V6 Hotend, SeeMeCNC EZR Struder
[extruder]
max_extrude_only_distance: 100.0
step_pin: PD15
dir_pin: !PD14
enable_pin: !PC7
microsteps: 16
rotation_distance: 33.264
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA2
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 285
min_extrude_temp: 140

#pressure_advance: 0.2942 # Old PLA setting with original hotend and extruder
#pressure_advance: 0.786 # PETG
#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
#pressure_advance_smooth_time: 0.040
#   A time range (in seconds) to use when calculating the average
#   extruder velocity for pressure advance. A larger value results in
#   smoother extruder movements. This parameter may not exceed 200ms.
#   This setting only applies if pressure_advance is non-zero. The
#   default is 0.040 (40 milliseconds).


#[extruder1]
#step_pin: PD11
#dir_pin: PD10
#enable_pin: !PD13
#heater_pin: PB4
#sensor_pin: PA3
#...

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PB7
kick_start_time: 0.200
off_below: 0.10

#[heater_fan fan1]
#pin: PB6

#[heater_fan fan2]
#pin: PB5

# Due to BTT implementing a Marlin-specific safety feature,
# "anti-reversal stepper protection", this pin needs pulling
# high to pass power to stepper drivers and most FETs

[output_pin motor_power]
pin: PC13
value: 1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_2A0022000747393438343535-if00
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[virtual_sdcard]
path: ~/gcode_files

# This enables a 'force_move' command ignoring all homing, Z-stops etc. Useful in debugging.
[force_move]
enable_force_move: True

# Disables Octoprint Menu
[menu __main __octoprint]
type: disabled

########################################
# Resonance Testing
########################################

# Use the RPi as a secondary MCU
# https://www.klipper3d.org/RPi_microcontroller.html
[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345 hotend]
# Assuming `hotend` chip is connected to an RPi
cs_pin: rpi:None

[adxl345 bed]
# Assuming `bed` chip is connected to an RPi
cs_pin: rpi:None

[resonance_tester]
# Assuming the typical setup of the bed slinger printer
accel_chip_x: adxl345 hotend
accel_chip_y: adxl345 bed
probe_points: 151,130,20


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE10, EXP1_7=PE12, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE9, EXP1_6=PE11, EXP1_8=PE13, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

######################################################################
# 128x64 Full Graphic Creality CR10 / ENDER 3 stockdisplay
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

########################################
# Temperature Sensors
########################################

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PE0
run_current: 0.800
hold_current: 0.800
#diag_pin:

[tmc2209 stepper_y]
uart_pin: PD3
run_current: 0.800
hold_current: 0.800
#diag_pin:

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.800
hold_current: 0.800
#diag_pin:

[tmc2209 extruder]
uart_pin: PC6
run_current: 0.600
#diag_pin:

#[tmc2209 extruder1]
#uart_pin: PD12
#run_current: 0.600
#diag_pin:

######################################################################
# Bed leveling support
######################################################################
# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.  When
# using a probe to home the z-axis, it is recommended to define
# a [homing_override] section in printer.cfg to home toward the
# center of the print area.
#
#  Visual Examples:
#   rectangular bed, probe_count = 3,3:
#               x---x---x (max_point)
#               |
#               x---x---x
#                       |
#   (min_point) x---x---x
#
#   round bed, round_probe_count = 5, bed_radius = r:
#                  x (0,r) end
#                /
#              x---x---x
#                        \
#   (-r,0) x---x---x---x---x (r,0)
#            \
#              x---x---x
#                    /
#                  x  (0,-r) start
#
[bed_mesh]
speed: 100
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#mesh_radius:
#   Defines the radius of the mesh to probe for round beds.  Note that the
#   radius is relative to the coordinate specified by the mesh_origin option.
#   This parameter must be provided for round beds and omitted for rectangular
#   beds.
#mesh_origin:
#   Defines the center x,y coordinate of the mesh for round beds.  This
#   coordinate is relative to the probe's location.  It may be useful
#   to adjust the mesh_origin in an effort to maximize the size of the
#   mesh radius.  Default is 0,0.  This parameter must be omitted for
#   rectangular beds.
mesh_min: 18,23
#   Defines the minimum x,y coodinate of the mesh for rectangular beds.  This
#   coordinate is relative to the probe's location. This will be the first
#   point probed, nearest to the origin. This parameter must be provided for
#   rectangular beds.
mesh_max: 212,238
#   Defines the maximum x,y coordinate of the mesh for rectangular beds.
#   Adheres to the same principle as mesh_min, however this will be the
#   furthest point probed from the bed's origin. This parameter must be
#   provided for rectangular beds.
probe_count: 5,5
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each axis.
#   A single value is also valid, in which case that value will be applied
#   to both axes.  Default is 3,3.
#round_probe_count: 5
#   For round beds, this integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled.  Default is 1.0.
fade_end: 10.0
#   The gcode z position in which phasing out completes.  When set
#   to a value below fade_start, fade is disabled. It should be
#   noted that fade may add unwanted scaling along the z-axis of a
#   print.  If a user wishes to enable fade, a value of 10.0 is
#   recommended. Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
#relative_reference_index:
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.

# This adds a screw tilt adjust command that probes certain points on the bed and recommends new bed screw positions (turn clockwise this much etc)
# Adjust for the offsets of your probe set in the [probe] section of config. Use [bed_screws] section below to determine where the actual screws are.
[screws_tilt_adjust]
screw1: 65,216
screw1_name: Rear left screw
screw2: 235,216
screw2_name: Rear right screw
screw3: 235,46
screw3_name: Front right screw
screw4: 65,46
screw4_name: Front left screw
horizontal_move_z: 10
speed: 250
screw_thread: CW-M4

# This adds a bed screws adjust GCode, that moves the nozzle around for you so you can paper adjust.
[bed_screws]
screw1: 32,206
screw1_name: Rear left screw
screw2: 202,206
screw2_name: Rear right screw
screw3: 202,36
screw3_name: Front right screw
screw4: 32,36
screw4_name: Front left screw

######################################################################
# Bed probing hardware
######################################################################
# BLTouch probe. One may define this section (instead of a probe
# section) to enable a BLTouch probe. See the docs/BLTouch.md guide
# for further information on configuring a BLTouch. A virtual
# "probe:z_virtual_endstop" pin is also created (see the "probe"
# section above for the details).
[bltouch]
sensor_pin: ^PE4
#   Pin connected to the BLTouch sensor pin. This parameter must be
#   provided.
control_pin: PE5
#   Pin connected to the BLTouch control pin. This parameter must be
#   provided.
#pin_move_time: 0.680
#   The amount of time (in seconds) to wait for the BLTouch pin to
#   move up or down. The default is 0.680 seconds.
#stow_on_each_sample: True
#   This determines if Klipper should command the pin to move up
#   between each probe attempt when performing a multiple probe
#   sequence. Read the directions in docs/BLTouch.md before setting
#   this to False. The default is True.
#probe_with_touch_mode: False
#   If this is set to True then Klipper will probe with the device in
#   "touch_mode". The default is False (probing in "pin_down" mode).
#pin_up_reports_not_triggered: True
#   Set if the BLTouch consistently reports the probe in a "not
#   triggered" state after a successful "pin_up" command. This should
#   be True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
#pin_up_touch_mode_reports_triggered: False
#   Set if the BLTouch consistently reports a "triggered" state after
#   the commands "pin_up" followed by "touch_mode". This should be
#   True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
#set_output_mode:
#   Request a specific sensor pin output mode on the BLTouch V3.0 (and
#   later). This setting should not be used on other types of probes.
#   Set to "5V" to request a sensor pin output of 5 Volts (only use if
#   the controller board needs 5V mode and is 5V tolerant on its input
#   signal line). Set to "OD" to request the sensor pin output use
#   open drain mode. The default is to not request an output mode.
x_offset: -34.6 # 34.6mm left of the nozzle
y_offset: 0 # 0mm forward of the nozzle
z_offset: 0.812 # Calc from BLTouch testing - set to 10 initially, Z Home, then lower nozzle until just touching paper. 10 - "lowering number" = z_offset
#speed:
samples: 2
#sample_retract_dist:
#samples_result:
#samples_tolerance:
#samples_tolerance_retries:
#   See the "probe" section of example-extras.cfg for information on these parameters.

#[safe_z_home]
#home_xy_position: 151,119 # Change coordinates to the center of your print bed - Temporary for new stepper
#home_xy_position: 151,130 # Change coordinates to the center of your print bed
#speed: 50
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 5

# Homing override. One may use this mechanism to run a series of
# g-code commands in place of a G28 found in the normal g-code input.
# This may be useful on printers that require a specific procedure to
# home the machine.
[homing_override]
gcode:
#   A list of G-Code commands to execute in place of G28 commands
#   found in the normal g-code input. See docs/Command_Templates.md
#   for G-Code format. If a G28 is contained in this list of commands
#   then it will invoke the normal homing procedure for the printer.
#   The commands listed here must home all axes. This parameter must
#   be provided.
    G90 ; Use absolute position mode
    G1 Z10 ; Move up 10mm
    G28 X Y
    G1 X151 Y130 F6000 ; Change the X and Y coordinates to the center of your print bed
    G28 Z
#axes: xyz
#   The axes to override. For example, if this is set to "z" then the
#   override script will only be run when the z axis is homed (eg, via
#   a "G28" or "G28 Z0" command). Note, the override script should
#   still home all axes. The default is "xyz" which causes the
#   override script to be run in place of all G28 commands.
#set_position_x:
#set_position_y:
set_position_z: 0.0
#   If specified, the printer will assume the axis is at the specified
#   position prior to running the above g-code commands. Setting this
#   disables homing checks for that axis. This may be useful if the
#   head must move prior to invoking the normal G28 mechanism for an
#   axis. The default is to not force a position for an axis.

########################################################
# Macros
########################################################

# From YouTube https://www.youtube.com/watch?v=i_541iD5Bj0
[gcode_macro G29]
gcode:
        G28
        G1 Z10 F6000
        BED_MESH_CALIBRATE
        BED_MESH_MAP

# Mainsail Macros
[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PAUSE
    TURN_OFF_HEATERS
    M107
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(3) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(3) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
    BED_MESH_CLEAR
    BASE_BED_MESH_CALIBRATE

# Custom GCode macro to make M300 use the beeper
[gcode_macro M300]
default_parameter_S: 1000
default_parameter_P: 100
gcode:
    SET_PIN PIN=beeper VALUE={S}
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

# Bed Screws Adjust  
[gcode_macro ADJUST_SCREWS]
gcode:
    G28
    SCREWS_TILT_CALCULATE

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0} and END_PRINT.

[gcode_macro START_PRINT]
gcode:
    M117 Heating Bed...
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(160)|float %}
    M140 S{BED_TEMP} # Set Heat Bed temperature
    M190 S{BED_TEMP} # Wait for Heat Bed temperature
    M104 S160 # start warming extruder to 160
    M117 Auto bed-level...
    G29 # Auto bed-level (BL-Touch)
    G92 E0 # Reset Extruder
    M104 S{EXTRUDER_TEMP} # Set Extruder temperature
    G1 X0 Y0 Z2.0 F5000.0 # Move to Front Left, and raise Z to prevent scractching surface
    M117 Heating the extruder...
    M109 S{EXTRUDER_TEMP} # Wait for Extruder temperature
    G1 X0.1 Y20 Z0.3 F5000.0 # move to start-line position
    M117 LET THE PURGE BEGIN...
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15 # draw 1st line
    G1 X0.4 Y200.0 Z0.3 F5000.0 # move to side a little
    G1 X0.4 Y20 Z0.3 F1500.0 E30 # draw 2nd line
    G92 E0 # reset extruder
    G1 Z2.0 F3000 # move z up little to prevent scratching of surface
    G1 X5 Y20 Z0.3 F5000.0 # Move over to prevent blob squish
    M117 Printing...
    M300 S1000 P500 # chirp to indicate starting to print

[gcode_macro END_PRINT]
gcode:
    G91 # Relative positioning
    G1 E-2 F2700 # Retract a bit
    G1 E-2 Z0.2 F2400 # Retract and raise Z
    G1 X5 Y5 F3000 # Wipe out
    G1 E-2 Z10 # Retract and Raise Z more
    G90 # Absolute positionning
    G1 X0 Y230 # Present print
    M106 S0 # Turn-off fan
    M104 S0 # Turn-off hotend
    M140 S0 # Turn-off bed
    M84 X Y E # Disable all steppers but Z
    M117 That's All Folks!
    M300 S440 P200 # Make Print Completed Tones
    M300 S660 P250
    M300 S880 P300
    BED_MESH_CLEAR

######################################################################
# Additional fans
######################################################################

# Heater cooling fans (one may define any number of sections with a
# "heater_fan" prefix). A "heater fan" is a fan that will be enabled
# whenever its associated heater is active. By default, a heater_fan
# has a shutdown_speed equal to max_power.
[heater_fan my_nozzle_fan]
pin: PB4
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
hardware_pwm: false
kick_start_time: 0.100
#   See the "fan" section in example.cfg for a description of the
#   above parameters.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 40.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.299
#*# pid_ki = 1.048
#*# pid_kd = 1178.384
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.897
#*# pid_ki = 1.251
#*# pid_kd = 104.755
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.317500, 0.137500, 0.100000, 0.156250, 0.272500
#*# 	  0.202500, 0.065000, 0.035000, 0.090000, 0.203750
#*# 	  0.186250, 0.042500, 0.003750, 0.061250, 0.172500
#*# 	  0.260000, 0.115000, 0.066250, 0.102500, 0.198750
#*# 	  0.257500, 0.168750, 0.121250, 0.140000, 0.227500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 18.0
#*# max_x = 212.0
#*# min_y = 23.0
#*# max_y = 238.0
